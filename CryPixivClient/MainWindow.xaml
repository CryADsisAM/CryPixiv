<Window x:Class="CryPixivClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:CryPixivClient.ViewModels"
        xmlns:cmd="clr-namespace:CryPixivClient.Commands"
        xmlns:local="clr-namespace:CryPixivClient"
        xmlns:virt="clr-namespace:CryPixivClient.VirtualizingTilePanel"
        xmlns:wnd="clr-namespace:CryPixivClient.Windows"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        mc:Ignorable="d" MinHeight="350" MinWidth="746" Height="430" Width="746" 
        Icon="Images/pixiv.ico" Closing="Window_Closing" SizeChanged="Window_SizeChanged" StateChanged="Window_StateChanged">
    <Window.Resources>
        <vm:MainViewModel x:Key="mainViewModel"/>
        <BitmapImage x:Key="missingImage" UriSource="Images/missingImage.jpg" />

        <!-- SERACH HISTORY DATATEMPLATE -->
        <DataTemplate x:Key="searchHistoryTemplate">
            <StackPanel x:Name="stackpanel" Orientation="Horizontal">
                <TextBlock Text="{Binding Original}" />
                <TextBlock Text="  " />
                <TextBlock Text="{Binding Translated, IsAsync=True}" Foreground="#FFB9B9B9" />
            </StackPanel>
        </DataTemplate>

        <!-- COLLECTION VIEW SOURCES START HERE -->
        <CollectionViewSource x:Key="ItemListViewSourceSorted" Source="{Binding DisplayedWorks_Results, Source={StaticResource mainViewModel}}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Stats.Score" Direction="Descending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <CollectionViewSource x:Key="ItemListViewSourceRecommended" Source="{Binding DisplayedWorks_Recommended, Source={StaticResource mainViewModel}}" />

        <CollectionViewSource x:Key="ItemListViewSourceRanking" Source="{Binding DisplayedWorks_Ranking, Source={StaticResource mainViewModel}}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="OrderNumber" Direction="Ascending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <CollectionViewSource x:Key="ItemListViewSourceFollowing" Source="{Binding DisplayedWorks_Following, Source={StaticResource mainViewModel}}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="CreatedTime" Direction="Descending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <CollectionViewSource x:Key="ItemListViewSourceBookmarks" Source="{Binding DisplayedWorks_Bookmarks, Source={StaticResource mainViewModel}}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="OrderNumber" Direction="Ascending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <CollectionViewSource x:Key="ItemListViewSourceBookmarksPrivate" Source="{Binding DisplayedWorks_BookmarksPrivate, Source={StaticResource mainViewModel}}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="OrderNumber" Direction="Ascending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <CollectionViewSource x:Key="ItemListViewSourceUser" Source="{Binding DisplayedWorks_User, Source={StaticResource mainViewModel}}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="OrderNumber" Direction="Ascending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <!-- BUTTON STYLE IS HERE -->
        <Style x:Key="buttonStyle" TargetType="Button">
            <Setter Property="Width" Value="45"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- IMAGE ANIMATIONS ARE HERE -->
        <Storyboard x:Key="MouseOverStoryboard">
            <DoubleAnimation To="40" Duration="0:00:00.4"
                             Storyboard.TargetName="toolbar"
                             Storyboard.TargetProperty="Height">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="2"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Key="MouseLeaveStoryboard">
            <DoubleAnimation To="0" Duration="0:00:00.4"
                             Storyboard.TargetName="toolbar"
                             Storyboard.TargetProperty="Height">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="2"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Key="GotSelectedStoryboard">
            <DoubleAnimation To="70" Duration="0:00:00.4"
                             Storyboard.TargetName="itemGrid"
                             Storyboard.TargetProperty="Height">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="2"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Key="GotDeselectedStoryboard">
            <DoubleAnimation To="120" Duration="0:00:00.4"
                             Storyboard.TargetName="itemGrid"
                             Storyboard.TargetProperty="Height">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="2"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <!-- ANIMATIONS FOR LISTVIEW ITEM -->
        <Style x:Key="itemContainerStyle" TargetType="ListViewItem">
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform x:Name="transform"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:00:00.5">
                                <DoubleAnimation.EasingFunction>
                                    <PowerEase Power="2"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" From="0.4" Duration="0:0:.5">
                                <DoubleAnimation.EasingFunction>
                                    <PowerEase Power="2"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" From="0.4" Duration="0:0:.5">
                                <DoubleAnimation.EasingFunction>
                                    <PowerEase Power="2"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>

                <EventTrigger RoutedEvent="Selected">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" To="0.9" Duration="0:0:.3"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" To="0.9" Duration="0:0:.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Unselected">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" To="1.0" Duration="0:0:.3"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" To="1.0" Duration="0:0:.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!-- ITEM TEMPLATE IS HERE -->
        <DataTemplate x:Key="mainItemTemplate">
            <StackPanel Width="250" Height="250" MaxHeight="250" MaxWidth="250">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Opacity" Value="1"/>
                        <Setter Property="IsEnabled" Value="True"/>
                        <Setter Property="BitmapEffect">
                            <Setter.Value>
                                <BlurBitmapEffect Radius="0" />
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShouldBlur}" Value="True">
                                <Setter Property="Opacity" Value="0.4"/>
                                <Setter Property="IsEnabled" Value="False"/>
                                <Setter Property="BitmapEffect">
                                    <Setter.Value>
                                        <BlurBitmapEffect Radius="30" />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>

                <!-- Animation triggers -->
                <StackPanel.Triggers>
                    <EventTrigger RoutedEvent="MouseEnter">
                        <BeginStoryboard Storyboard="{StaticResource MouseOverStoryboard}" />
                    </EventTrigger>
                    <EventTrigger RoutedEvent="MouseLeave">
                        <BeginStoryboard Storyboard="{StaticResource MouseLeaveStoryboard}" />
                    </EventTrigger>
                </StackPanel.Triggers>

                <!-- The actual template -->
                <Grid x:Name="itemGrid" Width="250" Height="250" MaxHeight="250" MaxWidth="250">
                    <!-- Page Count -->
                    <TextBlock Panel.ZIndex="2" Margin="5" FontWeight="Bold" Text="{Binding PageCountText, Mode=OneWay}" Foreground="White" FontSize="20">
                        <TextBlock.Effect>
                            <DropShadowEffect ShadowDepth="0" BlurRadius="6" />
                        </TextBlock.Effect>
                    </TextBlock>

                    <!-- Main image -->
                    <Image x:Name="mainImage" Width="250" Height="250" Stretch="UniformToFill" 
                           RenderOptions.BitmapScalingMode="HighQuality"  MaxHeight="250" MaxWidth="250">
                        <Image.Source>
                            <PriorityBinding FallbackValue="{StaticResource missingImage}">
                                <Binding Path="ImageThumbnail" IsAsync="True"/>
                            </PriorityBinding>
                        </Image.Source>
                    </Image>

                    <!-- The toolbar -->
                    <StackPanel x:Name="toolbar" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Center" 
                                Height="0" Panel.ZIndex="3" Background="White" MaxHeight="100" MaxWidth="150">
                        <!-- Height goes to 40 when mouse over -->
                        <Button CommandParameter="{Binding}" Command="{Binding OpenBrowserCmd, Source={StaticResource mainViewModel}}" Style="{DynamicResource buttonStyle}">
                            <Image x:Name="internetImage" RenderOptions.BitmapScalingMode="Fant" Width="35" Source="Images/internet.png" Margin="0,6"/>
                        </Button>
                        <Button CommandParameter="{Binding}" Command="{Binding BookmarkCmd, Source={StaticResource mainViewModel}}" Style="{DynamicResource buttonStyle}">
                            <Image x:Name="likeImage" RenderOptions.BitmapScalingMode="Fant" Width="35" Margin="0,6">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Source" Value="Images\dislike.png" />
                                        <Style.Triggers>
                                            <DataTrigger Value="True" Binding="{Binding IsFavorited}">
                                                <Setter Property="Source" Value="Images\like.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </Button>
                    </StackPanel>

                    <!-- Context Menu -->
                    <Grid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Open" CommandParameter="{Binding}" Command="{Binding OpenCmd, Source={StaticResource mainViewModel}}">
                                <MenuItem.Icon>
                                    <Image Source="Images/open.png" RenderOptions.BitmapScalingMode="Fant"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Header="{Binding BookmarkText}" CommandParameter="{Binding}" Command="{Binding BookmarkCmd, Source={StaticResource mainViewModel}}">
                                <MenuItem.Icon>
                                    <Image Source="Images/dislike.png" RenderOptions.BitmapScalingMode="Fant"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Open in browser" CommandParameter="{Binding}" Command="{Binding OpenBrowserCmd, Source={StaticResource mainViewModel}}">
                                <MenuItem.Icon>
                                    <Image Source="Images/internet.png" RenderOptions.BitmapScalingMode="Fant"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Header="Download selected posts" CommandParameter="{Binding}" Command="{Binding DownloadSelectedCmd, Mode=OneWay, Source={StaticResource mainViewModel}}" >
                                <MenuItem.Icon>
                                    <Image Source="Images/download.png" RenderOptions.BitmapScalingMode="Fant"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </Grid.ContextMenu>
                </Grid>
            </StackPanel>
        </DataTemplate>

        <!-- ITEMS PANEL TEMPLATE IS HERE -->
        <ItemsPanelTemplate x:Key="mainItemsPanel">
            <virt:VirtualizingTilePanel VirtualizingPanel.VirtualizationMode="Recycling" ItemsCached="50" CleanedUpItem="VirtualizingTilePanel_CleanedUpItem"/>
        </ItemsPanelTemplate>

    </Window.Resources>

    <Window.Title>
        <Binding Mode="OneWay" Path="Title" Source="{StaticResource mainViewModel}"/>
    </Window.Title>
    <Grid x:Name="mainGrid">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="15*"/>
            <ColumnDefinition Width="32*"/>
        </Grid.ColumnDefinitions>

        <wnd:PopUp x:Name="popupTags" Panel.ZIndex="10" Margin="10,77,0,0" Grid.ColumnSpan="2" Height="297" VerticalAlignment="Top" HorizontalAlignment="Left" Width="351" MouseLeave="popupTags_MouseLeave"/>
        <wnd:PopUp x:Name="followUserPopup" Panel.ZIndex="10" Grid.Column="1" Margin="0,0,20,10" HorizontalAlignment="Right" Width="262" Height="227" VerticalAlignment="Bottom"/>
        <!-- LIST VIEWS START HERE-->
        <ListView x:Name="mainListSorted" Margin="{Binding ListMargin}" ItemsSource="{Binding Mode=OneWay, Source={StaticResource ItemListViewSourceSorted}}" DataContext="{StaticResource mainViewModel}" 
                  Grid.ColumnSpan="2" ScrollViewer.ScrollChanged="mainList_ScrollChanged" HorizontalContentAlignment="Center"
                  ItemTemplate="{StaticResource mainItemTemplate}" ItemsPanel="{StaticResource mainItemsPanel}" MouseDoubleClick="list_DoubleClick"
                  ItemContainerStyle="{StaticResource itemContainerStyle}" BorderBrush="{x:Null}" SelectionChanged="list_SelectionChanged"/>

        <ListView x:Name="mainListRecommended" Margin="{Binding ListMargin}"  ItemsSource="{Binding Mode=OneWay, Source={StaticResource ItemListViewSourceRecommended}}" DataContext="{StaticResource mainViewModel}" 
                  Grid.ColumnSpan="2" ScrollViewer.ScrollChanged="mainList_ScrollChanged" HorizontalContentAlignment="Center"
                  ItemTemplate="{StaticResource mainItemTemplate}" ItemsPanel="{StaticResource mainItemsPanel}" MouseDoubleClick="list_DoubleClick"
                  ItemContainerStyle="{StaticResource itemContainerStyle}" BorderBrush="{x:Null}" SelectionChanged="list_SelectionChanged"/>

        <ListView x:Name="mainListRanking" Margin="{Binding ListMargin}"  ItemsSource="{Binding Mode=OneWay, Source={StaticResource ItemListViewSourceRanking}}" DataContext="{StaticResource mainViewModel}" 
                  Grid.ColumnSpan="2" ScrollViewer.ScrollChanged="mainList_ScrollChanged" HorizontalContentAlignment="Center"
                  ItemTemplate="{StaticResource mainItemTemplate}" ItemsPanel="{StaticResource mainItemsPanel}" MouseDoubleClick="list_DoubleClick"
                  ItemContainerStyle="{StaticResource itemContainerStyle}" BorderBrush="{x:Null}" SelectionChanged="list_SelectionChanged"/>

        <ListView x:Name="mainListFollowing" Margin="{Binding ListMargin}"  ItemsSource="{Binding Mode=OneWay, Source={StaticResource ItemListViewSourceFollowing}}" DataContext="{StaticResource mainViewModel}" 
                  Grid.ColumnSpan="2" ScrollViewer.ScrollChanged="mainList_ScrollChanged" HorizontalContentAlignment="Center"
                  ItemTemplate="{StaticResource mainItemTemplate}" ItemsPanel="{StaticResource mainItemsPanel}" MouseDoubleClick="list_DoubleClick"
                  ItemContainerStyle="{StaticResource itemContainerStyle}" BorderBrush="{x:Null}" SelectionChanged="list_SelectionChanged"/>

        <ListView x:Name="mainListBookmarks" Margin="{Binding ListMargin}"  ItemsSource="{Binding Mode=OneWay, Source={StaticResource ItemListViewSourceBookmarks}}" DataContext="{StaticResource mainViewModel}" 
                  Grid.ColumnSpan="2" ScrollViewer.ScrollChanged="mainList_ScrollChanged" HorizontalContentAlignment="Center"
                  ItemTemplate="{StaticResource mainItemTemplate}"  ItemsPanel="{StaticResource mainItemsPanel}" MouseDoubleClick="list_DoubleClick"
                  ItemContainerStyle="{StaticResource itemContainerStyle}" BorderBrush="{x:Null}" SelectionChanged="list_SelectionChanged"/>

        <ListView x:Name="mainListBookmarksPrivate" Margin="{Binding ListMargin}"  ItemsSource="{Binding Mode=OneWay, Source={StaticResource ItemListViewSourceBookmarksPrivate}}" DataContext="{StaticResource mainViewModel}" 
                  Grid.ColumnSpan="2" ScrollViewer.ScrollChanged="mainList_ScrollChanged" HorizontalContentAlignment="Center"
                  ItemTemplate="{StaticResource mainItemTemplate}"  ItemsPanel="{StaticResource mainItemsPanel}" MouseDoubleClick="list_DoubleClick"
                  ItemContainerStyle="{StaticResource itemContainerStyle}" BorderBrush="{x:Null}" SelectionChanged="list_SelectionChanged"/>

        <ListView x:Name="mainListUser" Margin="{Binding ListMargin}"  ItemsSource="{Binding Mode=OneWay, Source={StaticResource ItemListViewSourceUser}}" DataContext="{StaticResource mainViewModel}" 
                  Grid.ColumnSpan="2" ScrollViewer.ScrollChanged="mainList_ScrollChanged" HorizontalContentAlignment="Center"
                  ItemTemplate="{StaticResource mainItemTemplate}"  ItemsPanel="{StaticResource mainItemsPanel}" MouseDoubleClick="list_DoubleClick"
                  ItemContainerStyle="{StaticResource itemContainerStyle}" BorderBrush="{x:Null}" SelectionChanged="list_SelectionChanged"/>

        <!-- LIST VIEWS END HERE-->

        <TextBox x:Name="txtSearchQuery" TextChanged="txtSearchQuery_TextChanged" Height="24" Margin="10,53,65,0" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="14" MaxLength="300" 
                 MaxLines="1" TabIndex="1" LostFocus="txtSearchQuery_LostFocus" GotFocus="txtSearchQuery_GotFocus"/>
        <Button x:Name="btnSearch" Content="Search" Margin="0,53,10,0" VerticalAlignment="Top" Height="24" BorderBrush="#FFABADB3" HorizontalAlignment="Right" Width="56" IsDefault="True" TabIndex="2" Click="btnSearch_Click"/>
        <ProgressBar x:Name="mainProgessBar" Height="10" Margin="0,112,0,0" VerticalAlignment="Top" Foreground="#FF009CFF" Grid.ColumnSpan="2" IsTabStop="False" 
                     IsIndeterminate="{Binding IsWorking, Source={StaticResource mainViewModel}}"/>
        <Button x:Name="btnBookmarks" Content="Public" Grid.Column="1" HorizontalAlignment="Right" Margin="0,53,28,0" VerticalAlignment="Top" Width="91" Height="23" TabIndex="6" Click="btnBookmarks_Click" Background="#FFFFEAEA"/>

        <Grid Grid.Column="1">
            <Button x:Name="btnRankings" Content="Daily Ranking" HorizontalAlignment="Left" Margin="108,53,0,0" 
                VerticalAlignment="Top" Width="104" Height="45" Click="btnDailyRankings_Click" TabIndex="3" Background="#FFFFFEEE" HorizontalContentAlignment="Center"/>
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Daily" Click="DailyClick">
                        <MenuItem.Icon>
                            <Image Source="Images/one.png" RenderOptions.BitmapScalingMode="Fant"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Weekly" Click="WeeklyClick" >
                        <MenuItem.Icon>
                            <Image Source="Images/seven.png" RenderOptions.BitmapScalingMode="Fant"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Monthly" Click="MonthlyClick" >
                        <MenuItem.Icon>
                            <Image Source="Images/calendar.png" RenderOptions.BitmapScalingMode="Fant"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Male Ranking" Click="ForMalesClick">
                        <MenuItem.Icon>
                            <Image Source="Images/male.png" RenderOptions.BitmapScalingMode="Fant" Width="14"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Female Ranking" Click="ForFemalesClick">
                        <MenuItem.Icon>
                            <Image Source="Images/female.png" RenderOptions.BitmapScalingMode="Fant"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Daily R-18" Click="Daily18Click">
                        <MenuItem.Icon>
                            <Image Source="Images/onered.png" RenderOptions.BitmapScalingMode="Fant"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Weekly R-18" Click="Weekly18Click">
                        <MenuItem.Icon>
                            <Image Source="Images/sevenred.png" RenderOptions.BitmapScalingMode="Fant"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Grid.ContextMenu>
        </Grid>
        <StatusBar Height="22" VerticalAlignment="Bottom" Grid.ColumnSpan="2">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.6*" />
                            <ColumnDefinition Width="0.7*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <TextBlock x:Name="txtStatus" Text="{Binding Status, Source={StaticResource mainViewModel}}"></TextBlock>
            </StatusBarItem>
            <StatusBarItem Grid.Column="1">
                <TextBlock x:Name="txtStatus2" Text="{Binding CollectionStatus, Source={StaticResource mainViewModel}}"></TextBlock>
            </StatusBarItem>
            <StatusBarItem Grid.Column="2">
                <TextBlock x:Name="txtSelected" Text="{Binding SelectedStatus, Source={StaticResource mainViewModel}}"></TextBlock>
            </StatusBarItem>
        </StatusBar>
        <Button x:Name="btnFollowing" Content="Following" Grid.Column="1" HorizontalAlignment="Left" Margin="211,53,0,0" VerticalAlignment="Top" Width="74" Height="45" Background="White" Click="btnFollowing_Click" TabIndex="4"/>
        <CheckBox x:Name="checkPopular" Content="Autosort by Popularity" HorizontalAlignment="Left" Margin="10,82,0,0" VerticalAlignment="Top" IsChecked="True" Click="checkPopular_Click"/>
        <Button x:Name="btnResults" Content="Results" Grid.Column="1" HorizontalAlignment="Left" Margin="10,53,0,0" VerticalAlignment="Top" Width="80" Height="44" TabIndex="5" Click="btnResults_Click" Background="#FFB9B9B9"/>
        <Image Grid.Column="1" HorizontalAlignment="Right" Height="21" Margin="0,46,20,0" VerticalAlignment="Top" Width="21" Source="Images/like.png"/>
        <Image Grid.Column="1" HorizontalAlignment="Left" Height="28" Margin="98,45,0,0" VerticalAlignment="Top" Width="28" Source="Images/rank.png"/>
        <Grid Grid.Column="1">
            <Button x:Name="btnRecommended" Content="Recommended"  HorizontalAlignment="Left" Margin="284,53,0,0" VerticalAlignment="Top"
                Width="95" Height="45" Background="White" Click="btnRecommended_Click" TabIndex="5"/>
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Reset Results" Click="ResetResults_Click"/>
                </ContextMenu>
            </Grid.ContextMenu>
        </Grid>
        <Button x:Name="btnLogout" Content="Log Out" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="78" 
                    Height="23" Background="#FFFFA3A3" Margin="0,0,51,0" Click="btnLogout_Click" IsTabStop="False" Grid.Column="1"/>
        <Button x:Name="btnPause" Content="Pause" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="78" 
                    Height="23" Background="#FFFFFCBC" Margin="0,0,127,0" Click="btnPause_Click" IsTabStop="False" Grid.Column="1"/>
        <Button x:Name="btnBookmarksPrivate" Content="Private" Grid.Column="1" HorizontalAlignment="Right" Margin="0,75,28,0" VerticalAlignment="Top" Width="91" Height="23" TabIndex="6" Click="btnBookmarksPrivate_Click" Background="#FFFFEAEA"/>
        <TextBlock Grid.Column="1" HorizontalAlignment="Right" Margin="0,33,60,0" TextWrapping="Wrap" Text="Bookmarks" VerticalAlignment="Top"/>
        <TextBlock HorizontalAlignment="Left" Margin="10,32,0,0" TextWrapping="Wrap" Text="Search by tag:" VerticalAlignment="Top"/>
        <CheckBox x:Name="checkNSFW" Content="NSFW" HorizontalAlignment="Right" Margin="0,82,10,0" VerticalAlignment="Top" IsChecked="True" Click="checkNSFW_Click"/>
        <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Right-click on elements for more options" VerticalAlignment="Top" Grid.Column="1" Margin="119,33,0,0" Foreground="#FFBBBBBB" TextAlignment="Right" Width="259"/>
        <Menu VerticalAlignment="Top" Grid.ColumnSpan="2" Height="21">
            <MenuItem Header="Settings" Height="21" Click="Settings_Click"></MenuItem>
            <MenuItem Header="Help" Height="21">
                <MenuItem x:Name="AboutMenu" Header="About" Click="AboutMenu_Click">
                    <MenuItem.Icon>
                        <Image Source="Images/question-mark.png" RenderOptions.BitmapScalingMode="Fant" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem x:Name="GotoGitMenu" Header="Go to Github page" Click="GotoGitMenu_Click">
                    <MenuItem.Icon>
                        <Image Source="Images/github-logo.png" RenderOptions.BitmapScalingMode="Fant" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>
    </Grid>
</Window>
